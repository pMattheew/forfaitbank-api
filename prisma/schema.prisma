generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name      String
  email     String   @unique
  hash      String
  address   String
  cpf       String   @unique
  birthdate DateTime

  operations Operation[]

  @@map("users")
}

enum OperationBillType {
  ten
  fifty
  hundred
}

enum OperationStatus {
  opened
  reserved
  concluded
}

model Operation {
  id        String      @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name              String
  value             Int
  billType          OperationBillType
  status            OperationStatus

  userId            Int
  parentOperationId String?

  parent   Operation?  @relation("OperationFamily", fields: [parentOperationId], references: [id])
  children Operation[] @relation("OperationFamily")
  user     User        @relation(fields: [userId], references: [id])
  packages Package[]

  @@map("operations")
}

enum PackageStatus {
  opened
  closed
}

model Package {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  billType     OperationBillType
  billQuantity Int
  value        Int
  status       PackageStatus
  color        String
  
  operationId  String?
  grandpaId    String?

  parentOperation Operation? @relation(fields: [operationId], references: [id])

  @@map("packages")
}
